"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["360948"],{203775:function(e,n,d){d.r(n),d.d(n,{default:()=>l});var t=d(110239),r=d(712394);function s(e){let n={a:"a",code:"code",h1:"h1",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"function-usefield",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#function-usefield",children:"#"}),"Function: useField"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"useField"}),"<",(0,t.jsx)(n.code,{children:"TFieldValue"}),", ",(0,t.jsx)(n.code,{children:"TField"}),">(",(0,t.jsx)(n.code,{children:"name?"}),"): ",(0,t.jsx)(n.code,{children:"TField"})," | ",(0,t.jsx)(n.code,{children:"undefined"})]}),"\n",(0,t.jsxs)(n.h4,{id:"type-parameters",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#type-parameters",children:"#"}),"Type parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"TFieldValue"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"any"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"TField"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(n.a,{href:"/en/auto-docs/editor/interfaces/IField.html",children:(0,t.jsx)(n.code,{children:"IField"})}),"<",(0,t.jsx)(n.code,{children:"TFieldValue"}),", ",(0,t.jsx)(n.code,{children:"ChangeEvent"}),"<",(0,t.jsx)(n.code,{children:"any"}),"> | ",(0,t.jsx)(n.code,{children:"TFieldValue"}),"> | ",(0,t.jsx)(n.a,{href:"/en/auto-docs/editor/interfaces/IFieldArray.html",children:(0,t.jsx)(n.code,{children:"IFieldArray"})}),"<",(0,t.jsx)(n.code,{children:"TFieldValue"}),"> = ",(0,t.jsx)(n.a,{href:"/en/auto-docs/editor/interfaces/IField.html",children:(0,t.jsx)(n.code,{children:"IField"})}),"<",(0,t.jsx)(n.code,{children:"TFieldValue"}),", ",(0,t.jsx)(n.code,{children:"ChangeEvent"}),"<",(0,t.jsx)(n.code,{children:"any"}),"> | ",(0,t.jsx)(n.code,{children:"TFieldValue"}),">"]})]})]})]}),"\n",(0,t.jsxs)(n.h4,{id:"parameters",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"name?"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"string"})})]})})]}),"\n",(0,t.jsxs)(n.h4,{id:"returns",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns",children:"#"}),"Returns"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"TField"})," | ",(0,t.jsx)(n.code,{children:"undefined"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Deprecated"})})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"useField"})," is deprecated because its return relies on React render. if the Field is not rendered, the return would be\nundefined. If you simply want to monitor the change of the value of a certain path, please use ",(0,t.jsx)(n.code,{children:"useWatch(fieldName)"})]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["en%2Fauto-docs%2Feditor%2Ffunctions%2FuseField.md"]={toc:[{id:"type-parameters",text:"Type parameters",depth:4},{id:"parameters",text:"Parameters",depth:4},{id:"returns",text:"Returns",depth:4}],title:"Function: useField",headingTitle:"Function: useField",frontmatter:{}}}}]);