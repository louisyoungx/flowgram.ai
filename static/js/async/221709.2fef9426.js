"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["221709"],{141598:function(e,t,n){n.r(t),n.d(t,{default:()=>h});var s=n(110239),d=n(712394);function r(e){let t={a:"a",code:"code",h1:"h1",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.h1,{id:"function-findmatchpaths",children:[(0,s.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#function-findmatchpaths",children:"#"}),"Function: findMatchPaths"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/en/auto-docs/form/modules/Glob.html",children:"Glob"}),".findMatchPaths"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"findMatchPaths"}),"(",(0,s.jsx)(t.code,{children:"obj"}),", ",(0,s.jsx)(t.code,{children:"pattern"}),", ",(0,s.jsx)(t.code,{children:"withEmptyValue?"}),"): ",(0,s.jsx)(t.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(t.p,{children:"Find all paths matched pattern in object. If withEmptyValue is true, it will include\npaths  whoes value is undefined."}),"\n",(0,s.jsxs)(t.h4,{id:"parameters",children:[(0,s.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"obj"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"any"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"pattern"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"string"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"withEmptyValue?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"boolean"})})]})]})]}),"\n",(0,s.jsxs)(t.h4,{id:"returns",children:[(0,s.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#returns",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"string"}),"[]"]})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}={...(0,d.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["en%2Fauto-docs%2Fform%2Ffunctions%2FGlob.findMatchPaths.md"]={toc:[{id:"parameters",text:"Parameters",depth:4},{id:"returns",text:"Returns",depth:4}],title:"Function: findMatchPaths",headingTitle:"Function: findMatchPaths",frontmatter:{}}}}]);