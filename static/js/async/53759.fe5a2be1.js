"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["53759"],{741221:function(e,n,r){r.r(n),r.d(n,{default:()=>h});var s=r(110239),d=r(712394);function t(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"class-dagregraph",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#class-dagregraph",children:"#"}),"Class: DagreGraph"]}),"\n",(0,s.jsxs)(n.h2,{id:"table-of-contents",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#table-of-contents",children:"#"}),"Table of contents"]}),"\n",(0,s.jsxs)(n.h3,{id:"constructors",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#constructors",children:"#"}),"Constructors"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#constructor",children:"constructor"})}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"methods",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#methods",children:"#"}),"Methods"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#children",children:"children"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#edge",children:"edge"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#edgeasobj",children:"edgeAsObj"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#edgecount",children:"edgeCount"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#edges",children:"edges"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#filternodes",children:"filterNodes"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#graph",children:"graph"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#hasedge",children:"hasEdge"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#hasnode",children:"hasNode"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#inedges",children:"inEdges"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#iscompound",children:"isCompound"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#isdirected",children:"isDirected"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#ismultigraph",children:"isMultigraph"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#neighbors",children:"neighbors"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#node",children:"node"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#nodecount",children:"nodeCount"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#nodeedges",children:"nodeEdges"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#nodes",children:"nodes"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#outedges",children:"outEdges"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#parent",children:"parent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#predecessors",children:"predecessors"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#removeedge",children:"removeEdge"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#removenode",children:"removeNode"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#setdefaultedgelabel",children:"setDefaultEdgeLabel"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#setdefaultnodelabel",children:"setDefaultNodeLabel"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#setedge",children:"setEdge"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#setgraph",children:"setGraph"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#setnode",children:"setNode"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#setnodes",children:"setNodes"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#setparent",children:"setParent"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#setpath",children:"setPath"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#sinks",children:"sinks"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#sources",children:"sources"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html#successors",children:"successors"})}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"constructors-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#constructors-1",children:"#"}),"Constructors"]}),"\n",(0,s.jsxs)(n.h3,{id:"constructor",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#constructor",children:"#"}),"constructor"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"new DagreGraph"}),"(",(0,s.jsx)(n.code,{children:"options?"}),")"]}),"\n",(0,s.jsxs)(n.h4,{id:"parameters",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"GraphOptions"})})]})})]}),"\n",(0,s.jsxs)(n.h2,{id:"methods-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#methods-1",children:"#"}),"Methods"]}),"\n",(0,s.jsxs)(n.h3,{id:"children",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#children",children:"#"}),"children"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"children"}),"(",(0,s.jsx)(n.code,{children:"v"}),"): ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Gets list of direct children of node v.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-1",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"children nodes names list."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - node to get children of."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"edge",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#edge",children:"#"}),"edge"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"edge"}),"(",(0,s.jsx)(n.code,{children:"v"}),", ",(0,s.jsx)(n.code,{children:"w"}),", ",(0,s.jsx)(n.code,{children:"name?"}),"): ",(0,s.jsx)(n.code,{children:"any"})]}),"\n",(0,s.jsx)(n.p,{children:"Gets the label for the specified edge.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-2",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-2",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"w"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-1",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"any"})}),"\n",(0,s.jsx)(n.p,{children:"value associated with specified edge."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - edge source node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"w - edge sink node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"name - name of the edge (actual for multigraph)."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"edge"}),"(",(0,s.jsx)(n.code,{children:"e"}),"): ",(0,s.jsx)(n.code,{children:"any"})]}),"\n",(0,s.jsx)(n.p,{children:"Gets the label for the specified edge.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-3",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-3",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"e"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Edge"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-2",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-2",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"any"})}),"\n",(0,s.jsx)(n.p,{children:"value associated with specified edge."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"edge - edge descriptor."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"edgeasobj",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#edgeasobj",children:"#"}),"edgeAsObj"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"edgeAsObj"}),"(",(0,s.jsx)(n.code,{children:"v"}),", ",(0,s.jsx)(n.code,{children:"w"}),", ",(0,s.jsx)(n.code,{children:"name?"}),"): ",(0,s.jsx)(n.code,{children:"Object"})]}),"\n",(0,s.jsx)(n.p,{children:"Gets the label for the specified edge and converts it to an object.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-4",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-4",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"w"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-3",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-3",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Object"})}),"\n",(0,s.jsx)(n.p,{children:"value associated with specified edge."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - edge source node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"w - edge sink node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"name - name of the edge (actual for multigraph)."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"edgeAsObj"}),"(",(0,s.jsx)(n.code,{children:"e"}),"): ",(0,s.jsx)(n.code,{children:"Object"})]}),"\n",(0,s.jsx)(n.p,{children:"Gets the label for the specified edge and converts it to an object.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-5",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-5",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"e"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Edge"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-4",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-4",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Object"})}),"\n",(0,s.jsx)(n.p,{children:"value associated with specified edge."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"edge - edge descriptor."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"edgecount",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#edgecount",children:"#"}),"edgeCount"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"edgeCount"}),"(): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n",(0,s.jsx)(n.p,{children:"Gets the number of edges in the graph.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"returns-5",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-5",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"edges count."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"edges",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#edges",children:"#"}),"edges"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"edges"}),"(): ",(0,s.jsx)(n.code,{children:"Edge"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Gets edges of the graph. In case of compound graph subgraphs are not considered.\nComplexity: O(|E|)."}),"\n",(0,s.jsxs)(n.h4,{id:"returns-6",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-6",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Edge"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"graph edges list."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"filternodes",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#filternodes",children:"#"}),"filterNodes"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"filterNodes"}),"(",(0,s.jsx)(n.code,{children:"filter"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Creates new graph with nodes filtered via filter. Edges incident to rejected node\nare also removed. In case of compound graph, if parent is rejected by filter,\nthan all its children are rejected too.\nAverage-case complexity: O(|E|+|V|)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-6",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-6",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"filter"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(n.code,{children:"v"}),": ",(0,s.jsx)(n.code,{children:"string"}),") => ",(0,s.jsx)(n.code,{children:"boolean"})]})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-7",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-7",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"new graph made from current and nodes filtered."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"filter - filtration function detecting whether the node should stay or not."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"graph",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#graph",children:"#"}),"graph"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"graph"}),"(): ",(0,s.jsx)(n.code,{children:"any"})]}),"\n",(0,s.jsx)(n.p,{children:"Gets the graph label."}),"\n",(0,s.jsxs)(n.h4,{id:"returns-8",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-8",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"any"})}),"\n",(0,s.jsx)(n.p,{children:"currently assigned label for the graph or undefined if no label assigned."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"hasedge",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#hasedge",children:"#"}),"hasEdge"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"hasEdge"}),"(",(0,s.jsx)(n.code,{children:"v"}),", ",(0,s.jsx)(n.code,{children:"w"}),", ",(0,s.jsx)(n.code,{children:"name?"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Detects whether the graph contains specified edge or not. No subgraphs are considered.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-7",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-7",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"w"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-9",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-9",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"whether the graph contains the specified edge or not."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - edge source node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"w - edge sink node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"name - name of the edge (actual for multigraph)."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"hasEdge"}),"(",(0,s.jsx)(n.code,{children:"edge"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Detects whether the graph contains specified edge or not. No subgraphs are considered.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-8",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-8",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"edge"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Edge"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-10",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-10",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"whether the graph contains the specified edge or not."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"edge - edge descriptor."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"hasnode",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#hasnode",children:"#"}),"hasNode"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"hasNode"}),"(",(0,s.jsx)(n.code,{children:"name"}),"): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Detects whether graph has a node with specified name or not."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-9",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-9",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-11",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-11",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"true if graph has node with specified name, false - otherwise."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"name - name of the node."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"inedges",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#inedges",children:"#"}),"inEdges"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"inEdges"}),"(",(0,s.jsx)(n.code,{children:"v"}),", ",(0,s.jsx)(n.code,{children:"w?"}),"): ",(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"Edge"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Return all edges that point to the node v. Optionally filters those edges down to just those\ncoming from node u. Behavior is undefined for undirected graphs - use nodeEdges instead.\nComplexity: O(|E|)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-10",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-10",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"w?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-12",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-12",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"Edge"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"edges descriptors list if v is in the graph, or undefined otherwise."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - edge sink node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"w - edge source node."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"iscompound",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#iscompound",children:"#"}),"isCompound"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isCompound"}),"(): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Whether graph was created with 'compound' flag set to true or not."}),"\n",(0,s.jsxs)(n.h4,{id:"returns-13",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-13",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"whether a node of the graph can have subnodes."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"isdirected",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#isdirected",children:"#"}),"isDirected"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isDirected"}),"(): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Whether graph was created with 'directed' flag set to true or not."}),"\n",(0,s.jsxs)(n.h4,{id:"returns-14",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-14",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"whether the graph edges have an orientation."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"ismultigraph",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#ismultigraph",children:"#"}),"isMultigraph"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isMultigraph"}),"(): ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Whether graph was created with 'multigraph' flag set to true or not."}),"\n",(0,s.jsxs)(n.h4,{id:"returns-15",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-15",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"whether the pair of nodes of the graph can have multiple edges."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"neighbors",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#neighbors",children:"#"}),"neighbors"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"neighbors"}),"(",(0,s.jsx)(n.code,{children:"v"}),"): ",(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Return all nodes that are predecessors or successors of the specified node or undefined if\nnode v is not in the graph.\nComplexity: O(|V|)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-11",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-11",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-16",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-16",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"node identifiers list or undefined if v is not in the graph."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - node identifier."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"node",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#node",children:"#"}),"node"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"node"}),"(",(0,s.jsx)(n.code,{children:"name"}),"): ",(0,s.jsx)(n.code,{children:"any"})]}),"\n",(0,s.jsx)(n.p,{children:"Gets the label of node with specified name.\nComplexity: O(|V|)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-12",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-12",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-17",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-17",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"any"})}),"\n",(0,s.jsx)(n.p,{children:"label value of the node."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"nodecount",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#nodecount",children:"#"}),"nodeCount"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"nodeCount"}),"(): ",(0,s.jsx)(n.code,{children:"number"})]}),"\n",(0,s.jsx)(n.p,{children:"Gets the number of nodes in the graph.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"returns-18",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-18",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.p,{children:"nodes count."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"nodeedges",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#nodeedges",children:"#"}),"nodeEdges"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"nodeEdges"}),"(",(0,s.jsx)(n.code,{children:"v"}),", ",(0,s.jsx)(n.code,{children:"w?"}),"): ",(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"Edge"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns all edges to or from node v regardless of direction. Optionally filters those edges\ndown to just those between nodes v and w regardless of direction.\nComplexity: O(|E|)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-13",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-13",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"w?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-19",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-19",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"Edge"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"edges descriptors list if v is in the graph, or undefined otherwise."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - edge adjacent node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"w - edge adjacent node."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"nodes",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#nodes",children:"#"}),"nodes"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"nodes"}),"(): ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Gets all nodes of the graph. Note, the in case of compound graph subnodes are\nnot included in list.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"returns-20",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-20",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"list of graph nodes."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"outedges",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#outedges",children:"#"}),"outEdges"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"outEdges"}),"(",(0,s.jsx)(n.code,{children:"v"}),", ",(0,s.jsx)(n.code,{children:"w?"}),"): ",(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"Edge"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Return all edges that are pointed at by node v. Optionally filters those edges down to just\nthose point to w. Behavior is undefined for undirected graphs - use nodeEdges instead.\nComplexity: O(|E|)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-14",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-14",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"w?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-21",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-21",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"Edge"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"edges descriptors list if v is in the graph, or undefined otherwise."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - edge source node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"w - edge sink node."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"parent",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parent",children:"#"}),"parent"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"parent"}),"(",(0,s.jsx)(n.code,{children:"v"}),"): ",(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"void"})]}),"\n",(0,s.jsx)(n.p,{children:"Gets parent node for node v.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-15",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-15",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-22",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-22",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.code,{children:"void"})]}),"\n",(0,s.jsx)(n.p,{children:"parent node name or void if v has no parent."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - node to get parent of."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"predecessors",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#predecessors",children:"#"}),"predecessors"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"predecessors"}),"(",(0,s.jsx)(n.code,{children:"v"}),"): ",(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Return all nodes that are predecessors of the specified node or undefined if node v is not in\nthe graph. Behavior is undefined for undirected graphs - use neighbors instead.\nComplexity: O(|V|)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-16",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-16",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-23",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-23",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"node identifiers list or undefined if v is not in the graph."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - node identifier."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"removeedge",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#removeedge",children:"#"}),"removeEdge"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"removeEdge"}),"(",(0,s.jsx)(n.code,{children:"edge"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Removes the specified edge from the graph. No subgraphs are considered.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-17",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-17",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"edge"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Edge"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-24",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-24",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"edge - edge descriptor."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"removeEdge"}),"(",(0,s.jsx)(n.code,{children:"v"}),", ",(0,s.jsx)(n.code,{children:"w"}),", ",(0,s.jsx)(n.code,{children:"name?"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Removes the specified edge from the graph. No subgraphs are considered.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-18",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-18",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"w"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-25",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-25",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - edge source node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"w - edge sink node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"name - name of the edge (actual for multigraph)."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"removenode",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#removenode",children:"#"}),"removeNode"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"removeNode"}),"(",(0,s.jsx)(n.code,{children:"name"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Remove the node with the name from the graph or do nothing if the node is not in\nthe graph. If the node was removed this function also removes any incident\nedges.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-19",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-19",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-26",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-26",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"name - name of the node."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"setdefaultedgelabel",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#setdefaultedgelabel",children:"#"}),"setDefaultEdgeLabel"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setDefaultEdgeLabel"}),"(",(0,s.jsx)(n.code,{children:"label"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Sets the default edge label. This label will be assigned as default label\nin case if no label was specified while setting an edge.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-20",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-20",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"label"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"any"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-27",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-27",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"label - default edge label."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setDefaultEdgeLabel"}),"(",(0,s.jsx)(n.code,{children:"labelFn"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Sets the default edge label factory function. This function will be invoked\neach time when setting an edge with no label specified and returned value\nwill be used as a label for edge.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-21",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-21",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"labelFn"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(n.code,{children:"v"}),": ",(0,s.jsx)(n.code,{children:"string"}),") => ",(0,s.jsx)(n.code,{children:"any"})]})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-28",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-28",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"labelFn - default edge label factory function."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"setdefaultnodelabel",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#setdefaultnodelabel",children:"#"}),"setDefaultNodeLabel"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setDefaultNodeLabel"}),"(",(0,s.jsx)(n.code,{children:"label"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Sets the default node label. This label will be assigned as default label\nin case if no label was specified while setting a node.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-22",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-22",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"label"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"any"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-29",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-29",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"label - default node label."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setDefaultNodeLabel"}),"(",(0,s.jsx)(n.code,{children:"labelFn"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Sets the default node label factory function. This function will be invoked\neach time when setting a node with no label specified and returned value\nwill be used as a label for node.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-23",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-23",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"labelFn"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["(",(0,s.jsx)(n.code,{children:"v"}),": ",(0,s.jsx)(n.code,{children:"string"}),") => ",(0,s.jsx)(n.code,{children:"any"})]})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-30",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-30",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"labelFn - default node label factory function."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"setedge",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#setedge",children:"#"}),"setEdge"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setEdge"}),"(",(0,s.jsx)(n.code,{children:"v"}),", ",(0,s.jsx)(n.code,{children:"w"}),", ",(0,s.jsx)(n.code,{children:"label?"}),", ",(0,s.jsx)(n.code,{children:"name?"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Creates or updates the label for the edge (v, w) with the optionally supplied\nname. If label is supplied it is set as the value for the edge. If label is not\nsupplied and the edge was created by this call then the default edge label will\nbe assigned. The name parameter is only useful with multigraphs.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-24",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-24",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"w"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"label?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"any"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-31",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-31",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - edge source node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"w - edge sink node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"label - value to associate with the edge."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"name - unique name of the edge in order to identify it in multigraph."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setEdge"}),"(",(0,s.jsx)(n.code,{children:"edge"}),", ",(0,s.jsx)(n.code,{children:"label?"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Creates or updates the label for the specified edge. If label is supplied it is\nset as the value for the edge. If label is not supplied and the edge was created\nby this call then the default edge label will be assigned. The name parameter is\nonly useful with multigraphs.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-25",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-25",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"edge"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Edge"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"label?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"any"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-32",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-32",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"edge - edge descriptor."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"label - value to associate with the edge."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"setgraph",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#setgraph",children:"#"}),"setGraph"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setGraph"}),"(",(0,s.jsx)(n.code,{children:"label"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Sets the label of the graph."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-26",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-26",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"label"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"any"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-33",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-33",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"label - label value."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"setnode",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#setnode",children:"#"}),"setNode"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setNode"}),"(",(0,s.jsx)(n.code,{children:"name"}),", ",(0,s.jsx)(n.code,{children:"label?"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Creates or updates the value for the node v in the graph. If label is supplied\nit is set as the value for the node. If label is not supplied and the node was\ncreated by this call then the default node label will be assigned.\nComplexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-27",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-27",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"label?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"any"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-34",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-34",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"name - node name."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"label - value to set for node."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"setnodes",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#setnodes",children:"#"}),"setNodes"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setNodes"}),"(",(0,s.jsx)(n.code,{children:"names"}),", ",(0,s.jsx)(n.code,{children:"label?"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Invokes setNode method for each node in names list.\nComplexity: O(|names|)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-28",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-28",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"names"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"}),"[]"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"label?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"any"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-35",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-35",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"names - list of nodes names to be set."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"label - value to set for each node in list."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"setparent",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#setparent",children:"#"}),"setParent"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setParent"}),"(",(0,s.jsx)(n.code,{children:"v"}),", ",(0,s.jsx)(n.code,{children:"p?"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Sets node p as a parent for node v if it is defined, or removes the\nparent for v if p is undefined. Method throws an exception in case of\ninvoking it in context of noncompound graph.\nAverage-case complexity: O(1)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-29",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-29",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"p?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-36",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-36",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - node to be child for p."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"p - node to be parent for v."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"setpath",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#setpath",children:"#"}),"setPath"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"setPath"}),"(",(0,s.jsx)(n.code,{children:"nodes"}),", ",(0,s.jsx)(n.code,{children:"label?"}),"): ",(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})]}),"\n",(0,s.jsx)(n.p,{children:"Establish an edges path over the nodes in nodes list. If some edge is already\nexists, it will update its label, otherwise it will create an edge between pair\nof nodes with label provided or default label if no label provided.\nComplexity: O(|nodes|)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-30",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-30",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"nodes"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"string"}),"[]"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"label?"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"any"})})]})]})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-37",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-37",children:"#"}),"Returns"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/en/auto-docs/free-auto-layout-plugin/classes/DagreGraph.html",children:(0,s.jsx)(n.code,{children:"DagreGraph"})})}),"\n",(0,s.jsx)(n.p,{children:"the graph, allowing this to be chained with other functions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"nodes - list of nodes to be connected in series."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"label - value to set for each edge between pairs of nodes."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"sinks",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sinks",children:"#"}),"sinks"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"sinks"}),"(): ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Gets list of nodes without out-edges.\nComplexity: O(|V|)."}),"\n",(0,s.jsxs)(n.h4,{id:"returns-38",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-38",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"the graph source nodes."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"sources",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sources",children:"#"}),"sources"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"sources"}),"(): ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Gets list of nodes without in-edges.\nComplexity: O(|V|)."}),"\n",(0,s.jsxs)(n.h4,{id:"returns-39",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-39",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"the graph source nodes."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"successors",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#successors",children:"#"}),"successors"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"successors"}),"(",(0,s.jsx)(n.code,{children:"v"}),"): ",(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Return all nodes that are successors of the specified node or undefined if node v is not in\nthe graph. Behavior is undefined for undirected graphs - use neighbors instead.\nComplexity: O(|V|)."}),"\n",(0,s.jsxs)(n.h4,{id:"parameters-31",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-31",children:"#"}),"Parameters"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"v"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"string"})})]})})]}),"\n",(0,s.jsxs)(n.h4,{id:"returns-40",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#returns-40",children:"#"}),"Returns"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"void"})," | ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"node identifiers list or undefined if v is not in the graph."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Argument"})})}),"\n",(0,s.jsx)(n.p,{children:"v - node identifier."})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["en%2Fauto-docs%2Ffree-auto-layout-plugin%2Fclasses%2FDagreGraph.md"]={toc:[{id:"table-of-contents",text:"Table of contents",depth:2},{id:"constructors",text:"Constructors",depth:3},{id:"methods",text:"Methods",depth:3},{id:"constructors-1",text:"Constructors",depth:2},{id:"constructor",text:"constructor",depth:3},{id:"parameters",text:"Parameters",depth:4},{id:"methods-1",text:"Methods",depth:2},{id:"children",text:"children",depth:3},{id:"parameters-1",text:"Parameters",depth:4},{id:"returns",text:"Returns",depth:4},{id:"edge",text:"edge",depth:3},{id:"parameters-2",text:"Parameters",depth:4},{id:"returns-1",text:"Returns",depth:4},{id:"parameters-3",text:"Parameters",depth:4},{id:"returns-2",text:"Returns",depth:4},{id:"edgeasobj",text:"edgeAsObj",depth:3},{id:"parameters-4",text:"Parameters",depth:4},{id:"returns-3",text:"Returns",depth:4},{id:"parameters-5",text:"Parameters",depth:4},{id:"returns-4",text:"Returns",depth:4},{id:"edgecount",text:"edgeCount",depth:3},{id:"returns-5",text:"Returns",depth:4},{id:"edges",text:"edges",depth:3},{id:"returns-6",text:"Returns",depth:4},{id:"filternodes",text:"filterNodes",depth:3},{id:"parameters-6",text:"Parameters",depth:4},{id:"returns-7",text:"Returns",depth:4},{id:"graph",text:"graph",depth:3},{id:"returns-8",text:"Returns",depth:4},{id:"hasedge",text:"hasEdge",depth:3},{id:"parameters-7",text:"Parameters",depth:4},{id:"returns-9",text:"Returns",depth:4},{id:"parameters-8",text:"Parameters",depth:4},{id:"returns-10",text:"Returns",depth:4},{id:"hasnode",text:"hasNode",depth:3},{id:"parameters-9",text:"Parameters",depth:4},{id:"returns-11",text:"Returns",depth:4},{id:"inedges",text:"inEdges",depth:3},{id:"parameters-10",text:"Parameters",depth:4},{id:"returns-12",text:"Returns",depth:4},{id:"iscompound",text:"isCompound",depth:3},{id:"returns-13",text:"Returns",depth:4},{id:"isdirected",text:"isDirected",depth:3},{id:"returns-14",text:"Returns",depth:4},{id:"ismultigraph",text:"isMultigraph",depth:3},{id:"returns-15",text:"Returns",depth:4},{id:"neighbors",text:"neighbors",depth:3},{id:"parameters-11",text:"Parameters",depth:4},{id:"returns-16",text:"Returns",depth:4},{id:"node",text:"node",depth:3},{id:"parameters-12",text:"Parameters",depth:4},{id:"returns-17",text:"Returns",depth:4},{id:"nodecount",text:"nodeCount",depth:3},{id:"returns-18",text:"Returns",depth:4},{id:"nodeedges",text:"nodeEdges",depth:3},{id:"parameters-13",text:"Parameters",depth:4},{id:"returns-19",text:"Returns",depth:4},{id:"nodes",text:"nodes",depth:3},{id:"returns-20",text:"Returns",depth:4},{id:"outedges",text:"outEdges",depth:3},{id:"parameters-14",text:"Parameters",depth:4},{id:"returns-21",text:"Returns",depth:4},{id:"parent",text:"parent",depth:3},{id:"parameters-15",text:"Parameters",depth:4},{id:"returns-22",text:"Returns",depth:4},{id:"predecessors",text:"predecessors",depth:3},{id:"parameters-16",text:"Parameters",depth:4},{id:"returns-23",text:"Returns",depth:4},{id:"removeedge",text:"removeEdge",depth:3},{id:"parameters-17",text:"Parameters",depth:4},{id:"returns-24",text:"Returns",depth:4},{id:"parameters-18",text:"Parameters",depth:4},{id:"returns-25",text:"Returns",depth:4},{id:"removenode",text:"removeNode",depth:3},{id:"parameters-19",text:"Parameters",depth:4},{id:"returns-26",text:"Returns",depth:4},{id:"setdefaultedgelabel",text:"setDefaultEdgeLabel",depth:3},{id:"parameters-20",text:"Parameters",depth:4},{id:"returns-27",text:"Returns",depth:4},{id:"parameters-21",text:"Parameters",depth:4},{id:"returns-28",text:"Returns",depth:4},{id:"setdefaultnodelabel",text:"setDefaultNodeLabel",depth:3},{id:"parameters-22",text:"Parameters",depth:4},{id:"returns-29",text:"Returns",depth:4},{id:"parameters-23",text:"Parameters",depth:4},{id:"returns-30",text:"Returns",depth:4},{id:"setedge",text:"setEdge",depth:3},{id:"parameters-24",text:"Parameters",depth:4},{id:"returns-31",text:"Returns",depth:4},{id:"parameters-25",text:"Parameters",depth:4},{id:"returns-32",text:"Returns",depth:4},{id:"setgraph",text:"setGraph",depth:3},{id:"parameters-26",text:"Parameters",depth:4},{id:"returns-33",text:"Returns",depth:4},{id:"setnode",text:"setNode",depth:3},{id:"parameters-27",text:"Parameters",depth:4},{id:"returns-34",text:"Returns",depth:4},{id:"setnodes",text:"setNodes",depth:3},{id:"parameters-28",text:"Parameters",depth:4},{id:"returns-35",text:"Returns",depth:4},{id:"setparent",text:"setParent",depth:3},{id:"parameters-29",text:"Parameters",depth:4},{id:"returns-36",text:"Returns",depth:4},{id:"setpath",text:"setPath",depth:3},{id:"parameters-30",text:"Parameters",depth:4},{id:"returns-37",text:"Returns",depth:4},{id:"sinks",text:"sinks",depth:3},{id:"returns-38",text:"Returns",depth:4},{id:"sources",text:"sources",depth:3},{id:"returns-39",text:"Returns",depth:4},{id:"successors",text:"successors",depth:3},{id:"parameters-31",text:"Parameters",depth:4},{id:"returns-40",text:"Returns",depth:4}],title:"Class: DagreGraph",headingTitle:"Class: DagreGraph",frontmatter:{}}}}]);