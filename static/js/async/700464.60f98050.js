"use strict";(self.webpackChunk_flowgram_ai_docs=self.webpackChunk_flowgram_ai_docs||[]).push([["700464"],{740984:function(n,s,e){e.r(s),e.d(s,{default:()=>o});var r=e(110239),i=e(712394);function l(n){let s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,i.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h1,{id:"flowgram-runtime-介绍",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#flowgram-runtime-介绍",children:"#"}),"FlowGram Runtime 介绍"]}),"\n",(0,r.jsxs)("div",{className:"rs-highlight",children:[(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"⚠️ 目前为早期开发阶段"})}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"API 接口可能会有变更，不保证向后兼容"}),"\n",(0,r.jsx)(s.li,{children:"目前只支持 nodejs 运行时，且只支持自由布局"}),"\n"]})]}),"\n",(0,r.jsx)(s.p,{children:"本文档将介绍 FlowGram Runtime 的基本概念、设计理念和核心功能，帮助业务接入方开发者了解和使用这个工作流运行时引擎的参考实现。"}),"\n",(0,r.jsxs)(s.h2,{id:"什么是-flowgram-runtime",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#什么是-flowgram-runtime",children:"#"}),"什么是 FlowGram Runtime"]}),"\n",(0,r.jsx)(s.p,{children:"FlowGram Runtime 是一个工作流运行时引擎的参考实现，旨在为业务接入方开发者提供运行时参考。能够解析和执行基于图结构的工作流，支持多种节点类型，包括 Start、End、LLM、Condition、Loop 等。"}),"\n",(0,r.jsxs)(s.h3,{id:"项目定位与目标",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#项目定位与目标",children:"#"}),"项目定位与目标"]}),"\n",(0,r.jsxs)(s.p,{children:["FlowGram Runtime ",(0,r.jsx)(s.strong,{children:"定位为 demo 而非 SDK"}),"，主要目标是："]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"提供工作流运行时的设计和实现参考"}),"\n",(0,r.jsx)(s.li,{children:"展示如何构建和扩展工作流引擎"}),"\n",(0,r.jsx)(s.li,{children:"为开发者提供可以直接学习和修改的代码基础"}),"\n",(0,r.jsx)(s.li,{children:"支持快速原型开发和概念验证"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"作为参考实现，FlowGram Runtime 不会作为包发布，开发者需要 fork 代码库后，根据自己的业务场景和需求进行修改和扩展。"}),"\n",(0,r.jsxs)(s.h2,{id:"核心概念",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#核心概念",children:"#"}),"核心概念"]}),"\n",(0,r.jsxs)(s.h3,{id:"工作流-workflow",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#工作流-workflow",children:"#"}),"工作流 (Workflow)"]}),"\n",(0,r.jsx)(s.p,{children:"工作流是由节点和边组成的有向图，描述了一系列任务的执行顺序和逻辑关系。在 FlowGram Runtime 中，工作流使用 JSON 格式定义，包含节点和边两部分。"}),"\n",(0,r.jsx)(s.p,{children:"工作流定义示例："}),"\n",(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(s.pre,{className:"shiki css-variables has-highlighted",style:{backgroundColor:"var(--shiki-background)",color:"var(--shiki-foreground)"},tabIndex:"0",children:(0,r.jsxs)(s.code,{className:"language-json",children:[(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"{"})}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:'  "nodes"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" ["})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"    { "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:'"id"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "start"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "type"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "Start"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "meta"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" {}"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "data"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" {} }"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"    { "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:'"id"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "llm"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "type"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "LLM"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "meta"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" {}"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "data"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" { "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:'"systemPrompt"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "你是助手"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "userPrompt"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "{{start.input}}"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" } }"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"    { "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:'"id"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "end"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "type"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "End"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "meta"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" {}"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "data"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" {} }"})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"  ]"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:'  "edges"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" ["})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"    { "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:'"sourceNodeID"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "start"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "targetNodeID"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "llm"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" }"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,r.jsxs)(s.span,{className:"line",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"    { "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:'"sourceNodeID"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "llm"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:' "targetNodeID"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:' "end"'}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" }"})]}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"  ]"})}),"\n",(0,r.jsx)(s.span,{className:"line",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"}"})})]})})}),"\n",(0,r.jsxs)(s.h3,{id:"节点-node",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#节点-node",children:"#"}),"节点 (Node)"]}),"\n",(0,r.jsx)(s.p,{children:"节点是工作流中的基本执行单元，每个节点代表一个特定的操作或任务。FlowGram Runtime 支持多种节点类型，包括："}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Start 节点"}),"：工作流的起点，提供工作流输入"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"End 节点"}),"：工作流的终点，收集工作流输出"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"LLM 节点"}),"：调用大型语言模型，支持系统提示词和用户提示词"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Condition 节点"}),"：根据条件选择不同执行分支，支持多种比较操作符"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Loop 节点"}),"：对数组中的每个元素执行相同操作，支持子工作流"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"每个节点包含 ID、类型、元数据和数据等信息，不同类型的节点具有不同的配置选项和行为。"}),"\n",(0,r.jsxs)(s.h3,{id:"边-edge",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#边-edge",children:"#"}),"边 (Edge)"]}),"\n",(0,r.jsx)(s.p,{children:"边定义了节点之间的连接关系，表示数据和控制流的传递方向。每条边包含源节点、目标节点和可选的源端口信息。"}),"\n",(0,r.jsx)(s.p,{children:"边的定义决定了工作流的执行路径和数据流向，是构建复杂工作流逻辑的基础。"}),"\n",(0,r.jsxs)(s.h3,{id:"执行引擎-engine",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#执行引擎-engine",children:"#"}),"执行引擎 (Engine)"]}),"\n",(0,r.jsx)(s.p,{children:"执行引擎负责解析工作流定义，按照定义的逻辑顺序执行各个节点，并处理节点间的数据流转。是 FlowGram Runtime 的核心组件，管理整个工作流的生命周期。"}),"\n",(0,r.jsxs)(s.h2,{id:"技术架构",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#技术架构",children:"#"}),"技术架构"]}),"\n",(0,r.jsx)(s.p,{children:"FlowGram Runtime 采用领域驱动设计（DDD）架构，将系统分为多个领域："}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"文档 (Document)"}),"：工作流定义的数据结构，包括节点和边的模型"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"引擎 (Engine)"}),"：工作流执行的核心逻辑，负责工作流的解析和调度"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"执行器 (Executor)"}),"：负责执行各类节点的具体逻辑，如 LLM 调用、条件判断等"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"状态 (State)"}),"：维护工作流执行过程中的状态信息，包括执行历史和当前状态"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"变量 (Variable)"}),"：管理工作流执行过程中的变量数据，支持变量的存储和访问"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"技术栈",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#技术栈",children:"#"}),"技术栈"]}),"\n",(0,r.jsx)(s.p,{children:"FlowGram Runtime JS 版本基于以下技术栈构建："}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"TypeScript"}),"：提供类型安全和现代 JavaScript 特性"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"LangChain"}),"：集成大型语言模型和相关工具"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"OpenAI API"}),"：提供 AI 模型调用能力"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Fastify"}),"：高性能的 Web 框架，用于 HTTP API 服务"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"tRPC"}),"：类型安全的 API 框架"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"模块组成",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#模块组成",children:"#"}),"模块组成"]}),"\n",(0,r.jsx)(s.p,{children:"项目由三个核心模块组成："}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"js-core"}),"：核心运行时库，包含工作流引擎、节点执行器和状态管理"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"interface"}),"：接口定义，定义了 API 和数据模型"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"nodejs"}),"：NodeJS 服务实现，提供 HTTP API 和服务管理"]}),"\n"]}),"\n",(0,r.jsxs)(s.h2,{id:"当前开发状态和限制-️",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#当前开发状态和限制-️",children:"#"}),"当前开发状态和限制 ⚠️"]}),"\n",(0,r.jsx)(s.p,{children:"FlowGram Runtime 目前处于早期开发阶段，有以下状态和限制："}),"\n",(0,r.jsxs)(s.h3,{id:"开发状态",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#开发状态",children:"#"}),"开发状态"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"核心功能已经实现，包括工作流引擎、基本节点类型和主要 API"}),"\n",(0,r.jsx)(s.li,{children:"基本的 LLM 集成已完成，支持与 OpenAI 和 LangChain 的集成"}),"\n",(0,r.jsx)(s.li,{children:"提供了基本的错误处理和状态管理机制"}),"\n",(0,r.jsx)(s.li,{children:"包含测试用例和示例工作流，但文档相对有限"}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"已知限制",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#已知限制",children:"#"}),"已知限制"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"API 不稳定"}),"：API 接口可能会有变更，不保证向后兼容"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"功能不完善"}),"：部分功能尚未完全实现，如 ServerInfo API 和 Validation API"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"错误处理"}),"：错误处理机制不够完善，某些边缘情况可能导致异常"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"存储机制"}),"：当前存储机制较为简单，不适合生产环境的持久化需求"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"安全机制"}),"：缺乏完善的安全机制，如认证、授权和输入验证"]}),"\n"]}),"\n",(0,r.jsxs)(s.h2,{id:"未来开发计划",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#未来开发计划",children:"#"}),"未来开发计划"]}),"\n",(0,r.jsx)(s.p,{children:"FlowGram Runtime 的未来发展计划包括："}),"\n",(0,r.jsxs)(s.h3,{id:"多语言支持",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#多语言支持",children:"#"}),"多语言支持"]}),"\n",(0,r.jsx)(s.p,{children:"目前只有 JavaScript/TypeScript 版本，计划开发："}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Python 版本"}),"：适用于数据科学和机器学习场景"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Go 版本"}),"：适用于高性能服务端场景"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"功能增强",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#功能增强",children:"#"}),"功能增强"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"支持固定布局"}),"\n",(0,r.jsx)(s.li,{children:"增加更多节点类型：代码节点、意图识别节点、批处理节点、终止循环节点、继续循环节点、HTTP节点"}),"\n",(0,r.jsx)(s.li,{children:"完善错误处理和异常恢复机制"}),"\n",(0,r.jsx)(s.li,{children:"完善的服务端校验接口，包括 schema 校验和输入校验等"}),"\n",(0,r.jsxs)(s.li,{children:["支持 ",(0,r.jsx)(s.code,{children:"Docker"})," 运行"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"试运行优化",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#试运行优化",children:"#"}),"试运行优化"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"试运行支持输入表单"}),"\n",(0,r.jsx)(s.li,{children:"试运行输入参数校验"}),"\n",(0,r.jsx)(s.li,{children:"单节点调试"}),"\n"]})]})}function o(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}={...(0,i.a)(),...n.components};return s?(0,r.jsx)(s,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["zh%2Fguide%2Fruntime%2Fintroduction.mdx"]={toc:[{id:"什么是-flowgram-runtime",text:"什么是 FlowGram Runtime",depth:2},{id:"项目定位与目标",text:"项目定位与目标",depth:3},{id:"核心概念",text:"核心概念",depth:2},{id:"工作流-workflow",text:"工作流 (Workflow)",depth:3},{id:"节点-node",text:"节点 (Node)",depth:3},{id:"边-edge",text:"边 (Edge)",depth:3},{id:"执行引擎-engine",text:"执行引擎 (Engine)",depth:3},{id:"技术架构",text:"技术架构",depth:2},{id:"技术栈",text:"技术栈",depth:3},{id:"模块组成",text:"模块组成",depth:3},{id:"当前开发状态和限制-️",text:"当前开发状态和限制 ⚠️",depth:2},{id:"开发状态",text:"开发状态",depth:3},{id:"已知限制",text:"已知限制",depth:3},{id:"未来开发计划",text:"未来开发计划",depth:2},{id:"多语言支持",text:"多语言支持",depth:3},{id:"功能增强",text:"功能增强",depth:3},{id:"试运行优化",text:"试运行优化",depth:3}],title:"介绍",headingTitle:"FlowGram Runtime 介绍",frontmatter:{title:"介绍",description:"FlowGram Runtime 的基本概念和设计理念",sidebar_position:2}}}}]);